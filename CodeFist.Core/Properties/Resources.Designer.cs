//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeFist.Core {
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CodeFist.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function Player() {
        ///    this.makeMove = function () {
        ///        var move = Math.floor(Math.random() * 3);
        ///
        ///        return [&apos;rock&apos;, &apos;paper&apos;, &apos;scissors&apos;][move];
        ///    };
        ///}.
        /// </summary>
        public static string SampleBotSource {
            get {
                return ResourceManager.GetString("SampleBotSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function Game() {
        ///    this.play = function (players, done) {
        ///        players.forEach(function (player) {
        ///            player.instance = new player.constructor();
        ///        });
        ///
        ///        // Play the game
        ///        var betterMoves = {
        ///            rock: &quot;paper&quot;,
        ///            paper: &quot;scissors&quot;,
        ///            scissors: &quot;rock&quot;
        ///        };
        ///
        ///        var history = [],
        ///            scores = [0, 0];
        ///        
        ///        for (var round = 0; round &lt; 1000; round++) {
        ///            var moves = players.map(function (player [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SampleGameSource {
            get {
                return ResourceManager.GetString("SampleGameSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function Game() {
        ///    this.play = function (players, done) {
        ///        players.forEach(function (player, index) {
        ///            player.index = index;
        ///            player.instance = new player.constructor(index);
        ///        });
        ///
        ///        // Play the game
        ///        var history = [];
        ///        var rounds = 0;
        ///
        ///        done({
        ///            history: history,
        ///            rounds: round
        ///        });
        ///    };
        ///}.
        /// </summary>
        public static string SampleVisualizerSource {
            get {
                return ResourceManager.GetString("SampleVisualizerSource", resourceCulture);
            }
        }
    }
}
